{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/FilterField/FilterField.module.css","redux/actions/phoneBookActions.js","redux/operations/contactsOperations.js","redux/selectors/phoneBookSelectors.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/FilterField/FilterField.js","Components/App.js","redux/reducers/phoneBookReducers.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","getFilterValueAction","axios","defaults","baseURL","getAllContacts","state","contacts","items","getContactList","createSelector","filter","normalizedFilter","toLowerCase","trim","item","name","includes","initialContactState","number","ContactForm","useState","contact","setContact","dispatch","useDispatch","allContacts","useSelector","onHandleChange","e","prev","target","value","onSubmit","preventDefault","map","alert","a","post","data","addContact","className","s","contactForm","contactForm__label","type","onChange","contactForm__input","pattern","title","required","contactForm__btn","ContactList","selectors","isLoading","loading","error","useEffect","get","contactList","id","contactList__item","contactList__itemText","deleteBtn","onClick","delete","deleteContact","FilterField","filterField__conteiner","filterField__label","filterField__input","App","itemsReducer","createReducer","actions","_","payload","filterReducer","phoneBookReducers","combineReducers","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd701828.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteBtn\":\"ContactList_deleteBtn__1pK6w\",\"contactList\":\"ContactList_contactList__1WOlc\",\"contactList__item\":\"ContactList_contactList__item__3oAl_\",\"contactList__itemText\":\"ContactList_contactList__itemText__1045g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterField__conteiner\":\"FilterField_filterField__conteiner__2y59I\",\"filterField__label\":\"FilterField_filterField__label__xpiBf\",\"filterField__input\":\"FilterField_filterField__input__3IIRa\"};","import { createAction } from '@reduxjs/toolkit';\n// import { v4 as uuidv4 } from 'uuid';\n\n// const addContactAction = createAction('contacts/addContact', contact => ({\n//   payload: { ...contact, id: uuidv4() },\n// }));\n// const deleteContactAction = createAction('contacts/deleteContact');\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst getFilterValueAction = createAction('contacts/setFilterValue');\n\nexport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  // addContactAction,\n  // deleteContactAction,\n  getFilterValueAction,\n};\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from '../actions/phoneBookActions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nconst addContact = contact => async dispatch => {\n  dispatch(addContactRequest());\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n\nconst deleteContact = id => async dispatch => {\n  dispatch(deleteContactRequest());\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n\nexport { fetchContacts, addContact, deleteContact };\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getAllContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getLoading = state => state.contacts.loading;\n\nexport const getError = state => state.contacts.error;\n\n// export const getContactList = state => {\n//   const allContacts = getAllContacts(state);\n//   const filter = getFilter(state);\n//   const normalizedFilter = filter.toLowerCase().trim();\n//   return allContacts.filter(item =>\n//     item.name.toLowerCase().trim().includes(normalizedFilter),\n//   );\n// };\n\nexport const getContactList = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase().trim();\n    return contacts.filter(item =>\n      item.name.toLowerCase().trim().includes(normalizedFilter),\n    );\n  },\n);\n","import { useState } from 'react';\nimport s from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/operations/contactsOperations';\nimport { getAllContacts } from '../../redux/selectors/phoneBookSelectors';\n\nconst initialContactState = { name: '', number: '' };\n\nconst ContactForm = () => {\n  const [contact, setContact] = useState(initialContactState);\n\n  const dispatch = useDispatch();\n  const allContacts = useSelector(state => getAllContacts(state));\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    const arrNames = allContacts.map(item => item.name);\n\n    if (arrNames.includes(contact.name)) {\n      alert(`${contact.name} is already in contacts`);\n    } else {\n      dispatch(addContact(contact));\n      setContact(initialContactState);\n    }\n  };\n\n  const onHandleChange = e => {\n    setContact(prev => ({ ...prev, [e.target.name]: e.target.value }));\n  };\n\n  return (\n    <form onSubmit={onHandleSubmit} className={s.contactForm}>\n      <label className={s.contactForm__label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={contact.name}\n          onChange={onHandleChange}\n          className={s.contactForm__input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.contactForm__label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={contact.number}\n          onChange={onHandleChange}\n          className={s.contactForm__input}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={s.contactForm__btn}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  allContacts: PropTypes.array,\n  addNewContact: PropTypes.func,\n};\nexport default ContactForm;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchContacts,\n  deleteContact,\n} from '../../redux/operations/contactsOperations';\nimport * as selectors from '../../redux/selectors/phoneBookSelectors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(state => selectors.getContactList(state));\n  const isLoading = useSelector(state => selectors.getLoading(state));\n  const error = useSelector(state => selectors.getError(state));\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <p>Loading ...</p>}\n      {error && <p>{' Sorry, something wrong: ' + error}</p>}\n      <ul className={s.contactList}>\n        {items.map(({ id, name, number }) => (\n          <li key={id} className={s.contactList__item}>\n            <p className={s.contactList__itemText}>\n              {name}: {number}\n            </p>\n            <button\n              type=\"button\"\n              className={s.deleteBtn}\n              onClick={() => {\n                dispatch(deleteContact(id));\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nContactList.propTypes = {\n  items: PropTypes.array,\n  onHandleDelete: PropTypes.func,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport s from './FilterField.module.css';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilterValueAction } from '../../redux/actions/phoneBookActions';\n\nconst FilterField = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.contacts.filter);\n\n  return (\n    <div className={s.filterField__conteiner}>\n      <label className={s.filterField__label}>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={e => dispatch(getFilterValueAction(e.target.value))}\n          className={s.filterField__input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          required\n        />\n      </label>\n    </div>\n  );\n};\n\nFilterField.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default FilterField;\n","// import React, { useState } from 'react';\n// import { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport FilterField from './FilterField/FilterField';\n\nconst App = () => {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <FilterField />\n      <ContactList />\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\nimport * as actions from '../actions/phoneBookActions';\n\nconst itemsReducer = createReducer([], {\n  [actions.fetchContactsSuccess]: (_, { payload }) => payload,\n  [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\n  [actions.deleteContactSuccess]: (state, { payload }) => [\n    ...state.filter(({ id }) => id !== payload),\n  ],\n});\n\nconst loading = createReducer(false, {\n  [actions.fetchContactsRequest]: () => true,\n  [actions.fetchContactsSuccess]: () => false,\n  [actions.fetchContactsError]: () => false,\n  [actions.addContactRequest]: () => true,\n  [actions.addContactSuccess]: () => false,\n  [actions.addContactError]: () => false,\n  [actions.deleteContactRequest]: () => true,\n  [actions.deleteContactSuccess]: () => false,\n  [actions.deleteContactError]: () => false,\n});\n\nconst filterReducer = createReducer('', {\n  [actions.getFilterValueAction]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [actions.fetchContactsError]: (_, { payload }) => payload,\n  [actions.addContactError]: (_, { payload }) => payload,\n  [actions.deleteContactError]: (_, { payload }) => payload,\n  [actions.fetchContactsRequest]: () => '',\n  [actions.addContactRequest]: () => '',\n  [actions.deleteContactRequest]: () => '',\n});\n\nconst phoneBookReducers = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  loading,\n  error,\n});\n\nexport default phoneBookReducers;\n","import { configureStore } from '@reduxjs/toolkit';\nimport phoneBookReducers from './reducers/phoneBookReducers';\n\nexport const store = configureStore({\n  reducer: {\n    contacts: phoneBookReducers,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [\n          'contacts/fetchContactsRequest',\n          'contacts/fetchContactsSuccess',\n          'contacts/fetchContactsError',\n          'contacts/addContactRequest',\n          'contacts/addContactSuccess',\n          'contacts/addContactError',\n          'contacts/deleteContactRequest',\n          'contacts/deleteContactSuccess',\n          'contacts/deleteContactError',\n          'contacts/setFilterValue',\n        ],\n      },\n    }),\n});\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__27Fet\",\"contactForm__label\":\"ContactForm_contactForm__label__16yI3\",\"contactForm__input\":\"ContactForm_contactForm__input__3QF2k\",\"contactForm__btn\":\"ContactForm_contactForm__btn__AHGhF\"};"],"sourceRoot":""}